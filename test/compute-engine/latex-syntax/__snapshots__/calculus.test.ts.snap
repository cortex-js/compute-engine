// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
\\lim_{x\\to\\infty}f(x)
lim_(+oo) {f(x)}
["Limit", ["Function", ["f", "x"], "x"], "PositiveInfinity"]
`;

exports[` 2`] = `["Limit", ["Function", ["Divide", ["Sin", "x"], "x"], "x"], 0]`;

exports[` 3`] = `
\\lim_{x\\to\\infty}f(x)
lim_(+oo) {f(x)}
["Limit", ["Function", ["f", "x"], "x"], "PositiveInfinity"]
`;

exports[`DEFINITE INTEGRAL Lower and upper bounds 1`] = `
\\int_{0}^{1}\\!\\sin(x)\\, \\mathrm{d}x
int_(0)^(1)(sin(x) dx)
["Integrate", ["Function", ["Sin", "x"], "x"], ["Limits", "x", 0, 1]]
`;

exports[`DEFINITE INTEGRAL Lower and upper bounds with \\limits 1`] = `
\\int_{0}^{1}\\!\\sin(x)\\, \\mathrm{d}x
int_(0)^(1)(sin(x) dx)
["Integrate", ["Function", ["Sin", "x"], "x"], ["Limits", "x", 0, 1]]
`;

exports[`DEFINITE INTEGRAL Lower and upper bounds with no index 1`] = `
\\int_{0}^{1}\\!\\sin(x)
int_(0)^(1)(sin(x) dx)
[
  "Integrate",
  ["Function", ["Sin", "x"], "x"],
  ["Limits", "Nothing", 0, 1]
]
`;

exports[`DEFINITE INTEGRAL Lower bound only (malformed) 1`] = `
\\int_{0}\\!\\sin(x)\\, \\mathrm{d}x
int_(0)(sin(x) dx)
[
  "Integrate",
  ["Function", ["Sin", "x"], "x"],
  ["Limits", "x", 0, "Nothing"]
]
`;

exports[`DEFINITE INTEGRAL Symbolic lower bound (regions) 1`] = `
\\int_{G}\\!\\sin(x)\\, \\mathrm{d}x
int_("CatalanConstant")(sin(x) dx)
[
  "Integrate",
  ["Function", ["Sin", "x"], "x"],
  ["Limits", "x", "CatalanConstant", "Nothing"]
]
`;

exports[`DEFINITE INTEGRAL Upper bound only (malformed) 1`] = `
\\int^{1}\\!\\sin(x)\\, \\mathrm{d}x
int^(1)(sin(x) dx)
[
  "Integrate",
  ["Function", ["Sin", "x"], "x"],
  ["Limits", "x", "Nothing", 1]
]
`;

exports[`EXOTIC INTEGRALS \\iiint 1`] = `
\\int\\int\\int_{\\mathtip{\\error{\\blacksquare}}{\\in \\text{unknown}\\notin \\text{number}}}\\!f(x, y, z)\\, \\mathrm{d}x \\mathrm{d}y \\mathrm{d}z
int_(Error(ErrorCode("incompatible-type", "number", "unknown")))(f(x, y, z) dx  dy  dz)
[
  "Integrate",
  ["Function", ["f", "x", "y", "z"], "x", "y", "z"],
  [
    "Limits",
    "x",
    [
      "Error",
      ["ErrorCode", "incompatible-type", "'number'", "'unknown'"]
    ],
    "Nothing"
  ],
  ["Limits", "y", "Nothing", "Nothing"],
  ["Limits", "z", "Nothing", "Nothing"]
]
`;

exports[`EXOTIC INTEGRALS \\iint 1`] = `
\\int\\int_{\\mathtip{\\error{\\blacksquare}}{\\in \\text{(expression, variable: symbol, variables: symbol+) -> expression}\\notin \\text{number}}}\\!f(x, y)\\, \\mathrm{d}x \\mathrm{d}y
int_(Error(ErrorCode("incompatible-type", "number", "(expression, variable: symbol, variables: symbol+) -> expression")))(f(x, y) dx  dy)
[
  "Integrate",
  ["Function", ["f", "x", "y"], "x", "y"],
  [
    "Limits",
    "x",
    [
      "Error",
      [
        "ErrorCode",
        "incompatible-type",
        "'number'",
        "(expression, variable: symbol, variables: symbol+) -> expression"
      ]
    ],
    "Nothing"
  ],
  ["Limits", "y", "Nothing", "Nothing"]
]
`;

exports[`EXOTIC INTEGRALS \\intop 1`] = `
(\\mathrm{Baseform}(\\text{unexpected-command}, \\error{\\blacksquare}),0,\\sin(dxx))
(Baseform("unexpected-command", Error(ErrorCode("invalid-base", "\\"\\intop\\""))), 0, sin(d * x * x))
[
  "Tuple",
  [
    "Baseform",
    "unexpected-command",
    ["Error", ["ErrorCode", "invalid-base", ""\\intop""]]
  ],
  0,
  ["Sin", ["Multiply", "d", "x", "x"]]
]
`;

exports[`EXOTIC INTEGRALS \\oint - contour integral 1`] = `
\\ointundefined\\!f(s)
CircularIntegrate(f(s), (s, V, "Nothing"))
["CircularIntegrate", ["f", "s"], ["Triple", "s", "V", "Nothing"]]
`;

exports[`EXOTIC INTEGRALS \\oint - contour integral, no index 1`] = `
\\ointundefined\\!f
CircularIntegrate(f, ("Nothing", C, "Nothing"))
["CircularIntegrate", "f", ["Triple", "Nothing", "C", "Nothing"]]
`;

exports[`EXOTIC INTEGRALS \\smallint 1`] = `
(\\mathrm{Baseform}(\\text{unexpected-command}, \\error{\\blacksquare}),0,\\sin(dxx))
(Baseform("unexpected-command", Error(ErrorCode("invalid-base", "\\"\\smallint\\""))), 0, sin(d * x * x))
[
  "Tuple",
  [
    "Baseform",
    "unexpected-command",
    ["Error", ["ErrorCode", "invalid-base", ""\\smallint""]]
  ],
  0,
  ["Sin", ["Multiply", "d", "x", "x"]]
]
`;

exports[`INDEFINITE INTEGRAL INVALID index in denominator 1`] = `
\\int\\!\\frac{3x}{5dx}=2
int((3x) / (5d * x) dd  dx) === 2
[
  "Equal",
  [
    "Integrate",
    [
      "Function",
      ["Divide", ["Multiply", 3, "x"], ["Multiply", 5, "d", "x"]],
      "d",
      "x"
    ],
    ["Limits", "Nothing", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index \\alpha 1`] = `
\\int\\!\\alpha\\, \\mathrm{d}\\alpha+1=2
int(alpha) + 1 === 2
[
  "Equal",
  [
    "Add",
    ["Integrate", "alpha", ["Limits", "alpha", "Nothing", "Nothing"]],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index after delimiter 1`] = `
\\int\\!x^2+3x\\, \\mathrm{d}x=2
int(x^2 + 3x dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Add", ["Square", "x"], ["Multiply", 3, "x"]], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index after implicit trig argument 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x=2
int(sin(x) dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Sin", "x"], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index in addition 1`] = `
\\int\\!kx+3x\\, \\mathrm{d}x=2
int(k * x + 3x dk  dx) === 2
[
  "Equal",
  [
    "Integrate",
    [
      "Function",
      ["Add", ["Multiply", "k", "x"], ["Multiply", 3, "x"]],
      "k",
      "x"
    ],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index in negate 1`] = `
\\int\\!-x\\, \\mathrm{d}x=2
int(-x dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Negate", "x"], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index in numerator 1`] = `
\\int\\!\\frac{3x}{5}\\, \\mathrm{d}x=2
int(3/5 * x dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Multiply", ["Rational", 3, 5], "x"], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index in numerator with mathrm 1`] = `
\\int\\!\\frac{3x}{5}\\, \\mathrm{d}x=2
int(3/5 * x dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Multiply", ["Rational", 3, 5], "x"], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index inside delimiter 1`] = `
\\int\\!x^2+3x\\, \\mathrm{d}x=2
int(x^2 + 3x dx) === 2
[
  "Equal",
  [
    "Integrate",
    ["Function", ["Add", ["Square", "x"], ["Multiply", 3, "x"]], "x"],
    ["Limits", "x", "Nothing", "Nothing"]
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index with \\differentialD 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x+1=2
int(sin(x) dx) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", ["Sin", "x"], "x"],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index with d 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x+1=2
int(sin(x) dx) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", ["Sin", "x"], "x"],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index with mathrm 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x+1=2
int(sin(x) dx) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", ["Sin", "x"], "x"],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Index with operatorname 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x+1=2
int(sin(x) dx) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", ["Sin", "x"], "x"],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL No index 1`] = `
\\int\\!0+\\sin(x)+1=2
int(0) + sin(x) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", 0],
      ["Limits", "Nothing", "Nothing", "Nothing"]
    ],
    ["Sin", "x"],
    1
  ],
  2
]
`;

exports[`INDEFINITE INTEGRAL Non-standard typesetting (\\cdot) 1`] = `
\\int\\!f(t)\\, \\mathrm{d}t
int(f(t) dt)
[
  "Integrate",
  ["Function", ["f", "t"], "t"],
  ["Limits", "t", "Nothing", "Nothing"]
]
`;

exports[`INDEFINITE INTEGRAL Spacing commands 1`] = `
\\int\\!\\sin(x)\\, \\mathrm{d}x+1=2
int(sin(x) dx) + 1 === 2
[
  "Equal",
  [
    "Add",
    [
      "Integrate",
      ["Function", ["Sin", "x"], "x"],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    1
  ],
  2
]
`;

exports[`MULTIPLE INTEGRALS Double integral 1`] = `
\\int_{1}^{2}\\!\\int\\int_{0}^{1}\\!x^2+y^2\\, \\mathrm{d}x \\mathrm{d}y
int_(1)^(2)(int_(0)^(1)(x^2 + y^2 dx  dy) dx  dy)
[
  "Integrate",
  [
    "Function",
    [
      "Integrate",
      ["Function", ["Add", ["Square", "x"], ["Square", "y"]], "x", "y"],
      ["Limits", "x", 0, 1],
      ["Limits", "y", "Nothing", "Nothing"]
    ],
    "x",
    "y"
  ],
  ["Limits", "Nothing", 1, 2]
]
`;

exports[`MULTIPLE INTEGRALS Double integral with repeated index 1`] = `
\\int_{1}^{2}\\!\\int\\int_{0}^{1}\\!x^2\\, \\mathrm{d}x \\mathrm{d}x
int_(1)^(2)(int_(0)^(1)(x^2 dx) dx)
[
  "Integrate",
  [
    "Function",
    [
      "Integrate",
      ["Function", ["Square", "x"], "x"],
      ["Limits", "x", 0, 1],
      ["Limits", "x", "Nothing", "Nothing"]
    ],
    "x"
  ],
  ["Limits", "Nothing", 1, 2]
]
`;

exports[`MULTIPLE INTEGRALS Triple integral 1`] = `
\\int_{1}^{2}\\!\\int_{0}^{1}\\!\\int\\int\\int_{3}^{4}\\!x^2+y^2+z^2\\, \\mathrm{d}x \\mathrm{d}y \\mathrm{d}z
int_(1)^(2)(int_(0)^(1)(int_(3)^(4)(x^2 + y^2 + z^2 dx  dy  dz) dx  dy  dz) dx  dy  dz)
[
  "Integrate",
  [
    "Function",
    [
      "Integrate",
      [
        "Function",
        [
          "Integrate",
          [
            "Function",
            ["Add", ["Square", "x"], ["Square", "y"], ["Square", "z"]],
            "x",
            "y",
            "z"
          ],
          ["Limits", "x", 3, 4],
          ["Limits", "y", "Nothing", "Nothing"],
          ["Limits", "z", "Nothing", "Nothing"]
        ],
        "x",
        "y",
        "z"
      ],
      ["Limits", "Nothing", 0, 1]
    ],
    "x",
    "y",
    "z"
  ],
  ["Limits", "Nothing", 1, 2]
]
`;

exports[`MULTIPLE INTEGRALS Triple integral with \\limits and spacing 1`] = `
\\int_{1}^{2}\\!\\int_{0}^{1}\\!\\int\\int\\int_{3}^{4}\\!x^2+y^2+z^2\\, \\mathrm{d}x \\mathrm{d}y \\mathrm{d}z
int_(1)^(2)(int_(0)^(1)(int_(3)^(4)(x^2 + y^2 + z^2 dx  dy  dz) dx  dy  dz) dx  dy  dz)
[
  "Integrate",
  [
    "Function",
    [
      "Integrate",
      [
        "Function",
        [
          "Integrate",
          [
            "Function",
            ["Add", ["Square", "x"], ["Square", "y"], ["Square", "z"]],
            "x",
            "y",
            "z"
          ],
          ["Limits", "x", 3, 4],
          ["Limits", "y", "Nothing", "Nothing"],
          ["Limits", "z", "Nothing", "Nothing"]
        ],
        "x",
        "y",
        "z"
      ],
      ["Limits", "Nothing", 0, 1]
    ],
    "x",
    "y",
    "z"
  ],
  ["Limits", "Nothing", 1, 2]
]
`;

exports[`REAL WORLD INTEGRALS Integral with non standard typesetting 1`] = `
\\mathrm{S_{t}}=\\mathrm{S_0}+\\int_{\\mathtip{\\error{\\blacksquare}}{\\in \\text{unknown}\\notin \\text{number}}}^{\\mathtip{\\error{\\blacksquare}}{\\in \\text{unknown}\\notin \\text{number}}}\\!G-F\\, \\mathrm{d}t
"S_t" === "S_0" + int_(Error(ErrorCode("incompatible-type", "number", "unknown")))^(Error(ErrorCode("incompatible-type", "number", "unknown")))(-F + "CatalanConstant" dF)
[
  "Equal",
  "S_t",
  [
    "Add",
    "S_0",
    [
      "Integrate",
      ["Function", ["Subtract", "CatalanConstant", "F"], "F"],
      [
        "Limits",
        "t",
        [
          "Error",
          ["ErrorCode", "incompatible-type", "'number'", "'unknown'"]
        ],
        [
          "Error",
          ["ErrorCode", "incompatible-type", "'number'", "'unknown'"]
        ]
      ]
    ]
  ]
]
`;
